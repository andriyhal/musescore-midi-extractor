version: "3.8"

services:
    server:
        build: .
        container_name: express_server
        restart: unless-stopped
        ports:
            - "3001:3001"
        environment:
            - PORT=3001
            - QUEUE=score_links
            - RABBITMQ_URL=amqp://rabbitmq
            - rabbitmq
            - DATABASE_URL=postgresql://myuser:mypassword@postgres:5432/mydatabase?schema=public
        networks:
            - app_net
        command:
            - /app/wait-for-it.sh
            - rabbitmq
            - "5672"
            - /app/wait-for-it.sh
            - postgres
            - "5432"
            - node
            - /app/server/index.js
    consumer:
        build: .
        container_name: consumer_worker
        restart: unless-stopped
        environment:
            - QUEUE=score_links
            - RABBITMQ_URL=amqp://rabbitmq
            - DATABASE_URL=postgresql://myuser:mypassword@postgres:5432/mydatabase?schema=public
        depends_on:
            - rabbitmq
        networks:
            - app_net
        command:
            - /app/wait-for-it.sh
            - rabbitmq
            - "5672"
            - /app/wait-for-it.sh
            - postgres
            - "5432"
            - node
            - /app/consumer/consumer.js
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - app_net
    postgres:
        image: postgres:14
        container_name: postgres_db
        restart: unless-stopped
        environment:
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: mypassword
            POSTGRES_DB: mydatabase
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app_net

networks:
    app_net:
        driver: bridge

volumes:
    postgres_data:
